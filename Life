
public class Life {
	private boolean[][] lifeArray;
	private LifeDisplay lifeDisplay;
	static final int MinNeighbors = 2, MaxNeighbors = 2;
	
	public static void main(String[] args) throws Exception{
		LifeDisplay game1Display = new LifeDisplay();
		Life game1 = new Life(game1Display, 15, 15, 0.25);
		game1.doGenerations();
	}
		
	public Life(LifeDisplay lifeDisplay, int x, int y, double prob){
		this.lifeDisplay = lifeDisplay;
		lifeArray = new boolean[x][y];
		for (int i = 0; i<x; i++){
			for(int j = 0; j<y; j++){
				if( Math.random()<prob){
					lifeArray[i][j] = true;
				}else{
					lifeArray[i][j] = false;
				}
			}
		}
	}
	
	public void doGenerations() throws Exception{
		lifeDisplay.displayWorld(lifeArray);
		while (!lifeIsExtinct()){
			nextGeneration();
			lifeDisplay.displayWorld(lifeArray);
		}
	}
	
	private boolean lifeIsExtinct(){
		for (int i = 0; i<lifeArray.length; i++){
			for(int j = 0; j<lifeArray[i].length; j++){
				if (lifeArray[i][j]) return false;
			}
		}
		return true;
	}
	
	private void nextGeneration(){
		boolean[][] newLifeArray = new boolean[lifeArray.length][lifeArray[0].length];
		for (int i = 0; i<lifeArray.length; i++){
			for(int j = 0; j<lifeArray[i].length; j++){
				newLifeArray[i][j] = (livingNeighbors(i,j) >= MinNeighbors && livingNeighbors(i,j) <= MaxNeighbors);
			}
		}
		lifeArray = newLifeArray;
	}
	
	private int livingNeighbors(int i, int j){
		int result = 0;
		if (isAlive(i-1,j-1)) result++;
		if (isAlive(i-1,j)) result++;
		if (isAlive(i-1,j+1)) result++;
		if (isAlive(i,j-1)) result++;
		if (isAlive(i,j+1)) result++;
		if (isAlive(i+1,j-1)) result++;
		if (isAlive(i+1,j)) result++;
		if (isAlive(i+1,j+1)) result++;
		return result;
	}
	
	private boolean isAlive(int i, int j){
		if (i >= 0 && i< lifeArray.length && j>=0 && j < lifeArray[i].length && lifeArray[i][j]){
			return true;
		} else {
			return false;
		}
	}
