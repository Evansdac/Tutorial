import java.io.*;
public class Tictactoe {

	private char[][] board;
	private String playerTurn;
	private BufferedReader br;
	
	public static void main(String[] args) throws Exception{
		Tictactoe t1 = new Tictactoe();
		t1.display();
		for(int i=0;i<9;i++){
			t1.move();
			if(t1.checkWin()){
				System.out.println("Player WINS!!!");
				break;
			}
		}		
	}
	
	private Tictactoe(){
		br = new BufferedReader(new InputStreamReader(System.in));
		board = new char[3][3];
		for (int i=0; i<3; i++){
			for(int j=0; j<3; j++){
				board[i][j]= Character.forDigit((j+1)+(i*3),10);
			}
		}
		playerTurn = "PLAYER1";
	}
	
	private void move() throws Exception{
		System.out.println(playerTurn + " where would you like to move? (box 1-9)");
		int temp = Integer.parseInt(br.readLine());
		if(board[(temp-1)/3][(temp-1)%3] == 'X' || board[(temp-1)/3][(temp-1)%3] == 'O'){
			System.out.println("Square already taken.");
			move();
		}else{
			if(playerTurn == "PLAYER1"){
				board[(temp-1)/3][(temp-1)%3] = 'X';
			} else {
				board[(temp-1)/3][(temp-1)%3] = 'O';
			}
			display();
			if (playerTurn == "PLAYER1") playerTurn = "PLAYER2";
			else playerTurn = "PLAYER1";
		}
	}
	
	private void display(){
		for (int i=0; i<3; i++){
			for(int j=0; j<3; j++){
				System.out.print(board[i][j]);
			}
			System.out.println("");
		}
	}
	
	private boolean checkWin(){
		if (board[0][0] == board[0][1] && board[0][1] == board[0][2]){
			return true;
		}
		if (board[1][0] == board[1][1] && board[1][1] == board[1][2]){
			return true;
		}
		if (board[2][0] == board[2][1] && board[2][1] == board[2][2]){
			return true;
		}
		if (board[0][0] == board[1][0] && board[1][0] == board[2][0]){
			return true;
		}
		if (board[0][1] == board[1][1] && board[1][1] == board[2][1]){
			return true;
		}
		if (board[0][2] == board[1][2] && board[1][2] == board[2][2]){
			return true;
		}
		if (board[0][0] == board[1][1] && board[1][1] == board[2][2]){
			return true;
		}
		if (board[2][0] == board[1][1] && board[1][1] == board[0][2]){
			return true;
		}
		return false;
	}

}
